{"version":3,"sources":["App.jsx","core/table_operation.js","modules/table_buttons/constants.js","modules/table_buttons/selectors.js","lib/actions.js","modules/table_buttons/actions.js","modules/table_buttons/reducer.js","core/table_sheet.js","core/table_operations.js","core/table.js","modules/table_buttons/components/table_preview.jsx","modules/table_buttons/components/upload_button.jsx","core/constants.js","core/shunting_yard.js","modules/table_buttons/components/operation_button.jsx","modules/table_buttons/components/table_card.jsx","modules/table_buttons/components/button_board.jsx","modules/table_buttons/components/array_buffer_base64.js","modules/table_buttons/components/fixtures.js","modules/table_buttons/components/container.jsx","modules/table_buttons/index.js","store/createStore.js","lib/UIContext.js","lib/withUIContext.jsx","serviceWorker.js","index.jsx"],"names":["global","APP","UI","UIContext","registerModule","TableButtons","App","TableButtonsComponent","getConnectedComponent","className","src","alt","TableOperation","name","boundOperation","this","tables","operations","length","defaultOperation","equals","lastOperation","deletedIndex","newOperations","filter","operation","index","map","operationIndex","avaialbleOperations","plus","minus","concat","_plus","_minus","_equals","getTables","flow","state","getOperations","ActionFactory","type","Object","assign","getType","toString","payload","error","action","addTable","withPayload","addOperation","deleteTable","deleteOperation","changeOperation","addNextPossibleOperation","updateOperations","INITIAL_STATE","actions","table","newOperation","i","op","nextPossOp","nextPossibleOperation","newOps","calculateOperations","TableSheet","data","headers","fromFile","cache","key","options","header","XLSX","utils","sheet_to_json","table2","table1Hash","tableHash","table2Hash","rows","keys","hash","sheet","Table","sheets","columnNames","dummyObject","fromEntries","forEach","table1Data","table2Data","push","jsonCache","sheetNames","setCurrentSheet","setHeaders","setKeys","guessKeys","tableOperations","ws","json_to_sheet","wb","book_new","book_append_sheet","writeFile","row","keyPart","sort","join","sheetName","currentSheetName","currentSheet","find","columns","column","looksLikeEmailField","emailField","firstRow","el","looksLikeEmail","indexOf","undefined","hashedTable","hashKey","rowHash","parseInt","blankValue","tableObject","parse","entries","Sheets","shetName","read","test","TablePreview","props","handleResize","forceUpdate","bind","handleHeaders","handleToggleKey","window","addEventListener","setState","e","turnedOn","target","checked","resultKeys","keyEqualToColumn","classNames","onClick","headerText","rowType","some","htmlFor","onChange","id","resizable","headerRenderer","args","Date","getTime","rowGetter","rowsCount","buttons","renderButton","dataGrid","sheetTabs","buttonInfo","title","callback","classes","autoFocus","buttonClasses","React","UploadButton","handleFile","handleCancel","handleAddTable","value","preventDefault","reader","FileReader","file","files","onloadend","fromData","result","readAsBinaryString","resetFileInput","class","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","data-fa-i2svg","fill","d","renderInputButton","isOpen","Component","connect","dispatch","bindActionCreators","OPERANDS","TABLE_OPERATOR_INFO","precedence","associativity","a","b","arity","ShuntingYard","operatorInfo","tokenized","rpn","shuntingYard","solveRPN","outputQueue","operatorStack","token","includes","operatorStackTop","operatorStackTopInfo","pop","topOperator","Error","stack","operands","reverse","functionArguments","stackTop","OperationButton","handleOperationChange","renderOperation","reset","availableOperations","TableCard","previewIsOpen","handleDelete","togglePreview","handleDownload","toWorkBook","isResultTable","classnames","tabIndex","onKeyPress","ButtonBoard","lastOperationIsTerminal","solve","operationNode","shouldShowResult","calculateResult","xlsxTable2","chars","lookup","Uint8Array","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","ArrayBuffer","bytes","xlsxTable","fixtureTables","Container","table1","Modal","setAppElement","canUpload","noopReducer","modules","components","history","createBrowserHistory","store","context","initialState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","w","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reducers","injectReducer","reducer","rootReducer","combineReducers","router","connectRouter","replaceReducer","runSaga","saga","run","component","getComponent","WrappedComponent","withUIContext","module","MODULE_NAME","forOwn","componentName","registerComponent","container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4a92cc9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport UIContext from './lib/UIContext';\nimport * as TableButtons from './modules/table_buttons';\n\n// Init window.APP namespace\nif (!global.APP) {\n  global.APP = {};\n}\n\n// Init UI context\nglobal.APP.UI = new UIContext();\nglobal.APP.UI.registerModule(TableButtons);\n\nfunction App() {\n  const TableButtonsComponent = global.APP.UI.getConnectedComponent('table_buttons');\n\n  return (\n    <div className=\"App\">\n      <h1>Table calculator</h1>\n      <p>\n        This program helps\n        &nbsp;\n        <div className=\"tooltip\">\n          my beloved wife\n          <div className=\"bottom\">\n            <img src=\"./small_inna.jpg\" alt=\"Инночка-картиночка\" />\n            <i />\n          </div>\n        </div>\n        &nbsp;\n        to perform basic operations on Excel tables\n      </p>\n\n      <TableButtonsComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// @flow\nimport type { Tables, TableOperations } from 'lib/common/types';\n\nclass TableOperation {\n  name: string\n  boundOperation: string\n  static _plus: TableOperation\n  static _minus: TableOperation\n  static _equals: TableOperation\n\n  constructor({ name, boundOperation }: { name: string, boundOperation: string}) {\n    this.name = name;\n    this.boundOperation = boundOperation;\n  }\n\n  /**\n   * This function answers the question what is the next possible operation.\n   * The algorithm is quite simple:\n   * - prefer a plus operation if there is only one table on the board\n   * - prefer the default operation if there are more operations available\n   *\n   * @static\n   * @param {Tables} tables\n   * @param {TableOperations} operations\n   * @returns {(TableOperation | null)}\n   * @memberof TableOperation\n   */\n  static nextPossibleOperation(tables: Tables, operations: TableOperations): TableOperation | null {\n    if (tables.length === 0) { return null; }\n    if (tables.length === 1) {\n      if (operations.length === 0) { return TableOperation.defaultOperation(); }\n      if (operations.length > 1) { return null; }\n    }\n\n    // If the last operation is equals, no more operations available\n    if (operations.length > 0 && operations[operations.length - 1] === TableOperation.equals) {\n      return null;\n    }\n\n    return TableOperation.defaultOperation();\n  }\n\n  /**\n   * This function is used to define if the last operation is 'equals'. This is helpful\n   * to determine whether to show an upload button or not.\n   *\n   * @static\n   * @param {TableOperations} operations list of all operations\n   * @returns {boolean}\n   * @memberof TableOperation\n   */\n  static lastOperationIsTerminal(operations: TableOperations): boolean {\n    const lastOperation = operations[operations.length - 1];\n    // Last operation is equals => no\n    return (lastOperation && lastOperation === TableOperation.equals());\n  }\n\n\n  /**\n   * This function helps to recalculate operations after deletion of a table.\n   * When the table gets deleted:\n   * - Delete the operation after a table\n   * - Recalculate the last operation:\n   *   - the last operation is equals and there's a single table on the board -> return default one\n   *\n   * @static\n   * @param {Tables} tables list of all tables\n   * @param {TableOperations} operations list of all operations\n   * @param {number} deletedIndex the index of the removed table\n   * @returns {TableOperations} truncated list of operations\n   * @memberof TableOperation\n   */\n  // eslint-disable-next-line max-len\n  static calculateOperations(\n    tables: Tables,\n    operations: TableOperations,\n    deletedIndex: number,\n  ): TableOperations {\n    const newOperations = operations.filter((operation, index) => index !== deletedIndex);\n\n    if (tables.length === 0) { return []; }\n    if (tables.length === 1 && operations.length > 0) {\n      return newOperations.map((operation, index) => {\n        if (index === newOperations.length - 1 && operation === TableOperation.equals()) {\n          return TableOperation.defaultOperation();\n        }\n        return operation;\n      });\n    }\n\n    return newOperations;\n  }\n\n  /**\n   * Basically, only two operations should be always available -> plus and minus\n   * The last operation button in the stack should have equals too\n   * The only operation button cannot have equals operation\n   *\n   * @static\n   * @param {Tables} tables\n   * @param {TableOperations} operations\n   * @param {number} operationIndex\n   * @returns {TableOperations}\n   * @memberof TableOperation\n   */\n  static availableOperations(\n    tables: Tables,\n    operations: TableOperations,\n    operationIndex: number,\n  ): TableOperations {\n    const avaialbleOperations: TableOperations = [TableOperation.plus(), TableOperation.minus()];\n    if (operations.length === 0) { return []; }\n    if (operations.length === 1) {\n      return avaialbleOperations;\n    }\n\n    if ((operations.length - 1) === operationIndex) {\n      return avaialbleOperations.concat(TableOperation.equals());\n    }\n\n    return avaialbleOperations;\n  }\n\n  static plus(): TableOperation {\n    // eslint-disable-next-line no-underscore-dangle\n    this._plus = this._plus || new TableOperation({ name: '+', boundOperation: 'plus' });\n    // eslint-disable-next-line no-underscore-dangle\n    return this._plus;\n  }\n\n  static minus(): TableOperation {\n    // eslint-disable-next-line no-underscore-dangle\n    this._minus = this._minus || new TableOperation({ name: '–', boundOperation: 'minus' });\n    // eslint-disable-next-line no-underscore-dangle\n    return this._minus;\n  }\n\n  static equals(): TableOperation {\n    // eslint-disable-next-line no-underscore-dangle\n    this._equals = this._equals || new TableOperation({ name: '=', boundOperation: 'equals' });\n    // eslint-disable-next-line no-underscore-dangle\n    return this._equals;\n  }\n\n  static defaultOperation(): TableOperation {\n    return TableOperation.plus();\n  }\n\n  static allOperations(): Object {\n    return {\n      plus: this.plus,\n      minus: this.plus,\n      equals: this.plus,\n    };\n  }\n}\n\nexport default TableOperation;\n","import TableOperation from 'core/table_operation';\n\nexport const MODULE_NAME = 'table_buttons';\n\nexport const plus = TableOperation.plus();\nexport const minus = TableOperation.minus();\nexport const equals = TableOperation.equals();\nexport const TABLE_OPERATIONS: $ReadOnlyArray<TableOperation> = {\n  plus,\n  minus,\n  equals,\n};\nexport const DEFAULT_OPERATION = TableOperation.defaultOperation();\n","import { flow } from 'lodash';\nimport { MODULE_NAME } from './constants';\n\nfunction getModel() {\n  return (state: { [name: string]: any }) => state[MODULE_NAME] || {};\n}\n\nexport const getTables = flow(getModel(), (state) => state.tables || []);\nexport const getOperations = flow(getModel(), (state) => state.operations || []);\n","//\n// Cool little typesafe DSL for action creators.\n//\n// Example:\n//   const Actions = {\n//     loadData: {\n//       request: action( \"LOAD_DATA_REQUEST\" ).empty(),\n//       success: action( \"LOAD_DATA_SUCCESS\" ).withPayload<{ name: string }>(),\n//       failure: action( \"LOAD_DATA_FAILURE\" ).withError()\n//     }\n//   }\n//\nexport class ActionFactory {\n  constructor(type) {\n    this.type = type;\n  }\n\n  //\n  // Creates action creator with no payload.\n  //\n  empty() {\n    const ac = () => ({ type: this.type });\n\n    return Object.assign(ac, {\n      getType: () => this.type,\n      toString: () => this.type.toString(),\n    });\n  }\n\n  //\n  // Creates action creator with payload.\n  //\n  withPayload() {\n    const ac = (payload) => ({ type: this.type, payload });\n\n    return Object.assign(ac, {\n      getType: () => this.type,\n      toString: () => this.type.toString(),\n    });\n  }\n\n  //\n  // Creates action creator with error as a payload.\n  //\n  withError() {\n    const ac = (payload) => ({ type: this.type, payload, error: true });\n\n    return Object.assign(ac, {\n      getType: () => this.type,\n      toString: () => this.type.toString(),\n    });\n  }\n}\n\nexport function action(type) {\n  return new ActionFactory(type);\n}\n","import { action } from '../../lib/actions';\n\nconst ADD_TABLE = 'ADD_TABLE';\nconst ADD_OPERATION = 'ADD_OPERATION';\nconst DELETE_TABLE = 'DELETE_TABLE';\nconst CHANGE_OPERATION = 'CHANGE_OPERATION';\nconst DELETE_OPERATION = 'DELETE_OPERATION';\nconst ADD_NEXT_POSSIBLE_OPERATION = 'ADD_NEXT_POSSIBLE_OPERATION';\nconst UPDATE_OPERATIONS = 'UPDATE_OPERATIONS';\n\nexport default {\n  addTable: action(ADD_TABLE).withPayload(),\n  addOperation: action(ADD_OPERATION).withPayload(),\n  deleteTable: action(DELETE_TABLE).withPayload(),\n  deleteOperation: action(DELETE_OPERATION).withPayload(),\n  changeOperation: action(CHANGE_OPERATION).withPayload(),\n  addNextPossibleOperation: action(ADD_NEXT_POSSIBLE_OPERATION).withPayload(),\n  updateOperations: action(UPDATE_OPERATIONS).withPayload(),\n};\n","// @flow\nimport type {\n  InitialStateType, Tables, TableOperations,\n} from 'lib/common/types';\nimport TableOperation from 'core/table_operation';\nimport actions from './actions';\n\nconst INITIAL_STATE = {\n  tables: [],\n  operations: [],\n};\n\nexport default (state: InitialStateType = INITIAL_STATE, action: actions) => {\n  switch (action.type) {\n    case actions.addTable.getType(): {\n      const tables: Tables = state.tables.concat(action.payload);\n\n      return {\n        ...state,\n        tables,\n      };\n    }\n\n    case actions.deleteTable.getType(): {\n      const tables: Tables = state.tables.filter((table) => table !== action.payload);\n\n      return {\n        ...state,\n        tables,\n      };\n    }\n\n    case actions.changeOperation.getType(): {\n      const { index, newOperation } = action.payload;\n\n      const operations = state.operations.map<any>((operation, i) => (\n        i === index ? newOperation : operation\n      ));\n\n      return {\n        ...state,\n        operations,\n      };\n    }\n\n    case actions.addOperation.getType(): {\n      const operation: TableOperation = action.payload;\n      const operations: TableOperations = state.operations.concat(operation);\n\n      return {\n        ...state,\n        operations,\n      };\n    }\n\n    case actions.deleteOperation.getType(): {\n      const operation: TableOperation = action.payload;\n      const operations: TableOperations = state.operations.filter((op) => (\n        op !== operation\n      ));\n\n      return {\n        ...state,\n        operations,\n      };\n    }\n\n    case actions.addNextPossibleOperation.getType(): {\n      const { tables, operations } = state;\n\n      const nextPossOp: TableOperation | null = TableOperation.nextPossibleOperation(\n        tables,\n        operations,\n      );\n\n      const newOps: TableOperations = nextPossOp ? operations.concat(nextPossOp) : operations;\n\n      return {\n        ...state,\n        operations: newOps,\n      };\n    }\n\n    case actions.updateOperations.getType(): {\n      const { tables, operations } = state;\n      const { deletedIndex } = action.payload;\n      const newOps = TableOperation.calculateOperations(tables, operations, deletedIndex);\n\n      return {\n        ...state,\n        operations: newOps,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","// @flow\nimport XLSX from 'xlsx';\n\nexport default class TableSheet {\n  name: string\n  data: Object\n  fromFile: boolean\n  headers: boolean\n  cache: Object\n\n  constructor(name: string, data: Object, headers:boolean = true, fromFile:boolean = false) {\n    this.name = name;\n    this.data = data;\n    this.fromFile = fromFile;\n    this.headers = headers;\n    this.cache = {};\n  }\n\n  setHeaders(headers:boolean) {\n    this.headers = headers;\n  }\n\n  get rows(): Object | Array<Array<Object>> {\n    if (!this.fromFile) {\n      return this.data;\n    }\n\n    const key = this.name + this.headers.toString();\n    const options = this.headers ? {} : { header: 1 };\n\n    this.cache[key] = this.cache[key] || XLSX.utils.sheet_to_json(this.data, options);\n\n    return this.cache[key];\n  }\n}\n","// @flow\nimport Table from 'core/table';\nimport TableSheet from 'core/table_sheet';\nimport type Columns from 'lib/common/types';\n\n// to subtract one table form another\n// 1. Create a hash for the keys for the first table\n// 2. Create a hash for the keys for the second table\n// 3. Walk though the keys of the first table\n//   3.1 Do not include the key in the result if it presents in the hash of the second table\n// 4. Returns artificial result table which acts almost like a Table\nfunction minus(table2: Table): Table {\n  const table1Hash = this.tableHash;\n  const table2Hash = table2.tableHash;\n\n  const rows = Object.keys(table1Hash).filter((hash) => !table2Hash[hash])\n    .map((hash) => table1Hash[hash]);\n\n  const sheet = new TableSheet('Sheet1', rows, this.headers, false);\n\n  return new Table({\n    name: 'Result',\n    headers: this.headers,\n    sheets: [sheet],\n  });\n}\n\nfunction plus(table2: Table): Table {\n  const table1Hash = this.tableHash;\n  const table2Hash = table2.tableHash;\n  const rows = [];\n\n  // First, let's gather all the keys from both tables\n  const keys = this.columnNames.concat(table2.columnNames);\n  // Then let's create an object that consists of the keys with null values\n  const dummyObject = Object.fromEntries(keys.map((key) => [key, null]));\n\n  Object.keys(table1Hash).forEach((hash) => {\n    const table1Data = table1Hash[hash];\n    const table2Data = table2Hash[hash];\n    // If there's no such record in the second table then add existing one to the result\n    if (!table2Data) {\n      // Override the dummy object with table1Data\n      rows.push({ ...dummyObject, ...table1Data });\n    } else if (this.headers && table2.headers) {\n      // Merge both rows, preferring the data from the first table owerwriting keys in the second\n      rows.push({ ...table2Data, ...table1Data });\n    }\n  });\n\n  Object.keys(table2Hash).filter((hash) => !table1Hash[hash]).forEach((hash) => {\n    if (this.headers && table2.headers) {\n      const data: any = table2Hash[hash];\n      rows.push({ ...dummyObject, ...data });\n    }\n  });\n\n  const headers = this.headers || table2.headers;\n  const sheet = new TableSheet('Sheet1', rows, headers, false);\n\n  return new Table({\n    name: 'Result',\n    sheets: [sheet],\n    headers,\n  });\n}\n\n\nexport default {\n  minus,\n  plus,\n};\n","// @flow\nimport XLSX from 'xlsx';\nimport tableOperations from 'core/table_operations';\nimport type {\n  Column, Keys, Columns, Row, TableHash,\n} from 'lib/common/types';\nimport TableSheet from 'core/table_sheet';\n\ntype FileReaderData = null | string | ArrayBuffer\n\ntype constructorType = { name: string, headers: boolean, sheets: Array<TableSheet> }\ntype fromDataType = { data: FileReaderData, name: string, headers?: boolean }\n\nexport default class Table {\n  jsonCache: Object\n  name: string\n  headers: boolean\n  sheetNames: Array<string>\n  sheets: Array<TableSheet>\n  keys: Keys\n  currentSheetName: string\n  currentSheet: Object\n  columns: Columns\n  plus: (table: Table) => Table\n  minus: (table: Table) => Table\n\n  constructor({ name, headers, sheets }: constructorType) {\n    this.jsonCache = {};\n    this.name = name;\n    this.headers = headers;\n    this.sheets = sheets;\n    this.sheetNames = this.sheets.map((sheet) => sheet.name);\n\n    this.setCurrentSheet(this.sheetNames[0]);\n    this.setHeaders(headers);\n    this.setKeys(this.guessKeys());\n\n    Object.assign(this, tableOperations);\n  }\n\n  static fromData({ data, name, headers = true }: fromDataType) {\n    const tableObject = this.parse(data);\n    const sheets = Object.entries(tableObject.Sheets).map(\n      ([shetName, sheet]) => new TableSheet(shetName, sheet, headers, true),\n    );\n    const tableHeaders = headers || true;\n\n    return new Table({ name, headers: tableHeaders, sheets });\n  }\n\n  static parse(data: FileReaderData) {\n    const type = typeof (data) === 'string' ? 'binary' : 'array';\n    return XLSX.read(data, { type });\n  }\n\n  toWorkBook() {\n    const ws = XLSX.utils.json_to_sheet(this.rows);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet 1');\n\n    return XLSX.writeFile(wb, 'sheetjs.xlsx');\n  }\n\n  /**\n   * Calculate the hashes for each row of the table\n   *\n   * @returns Object in a shape of { \"hashKey\": Array }\n   * @readonly\n   * @memberof Table\n   */\n  get tableHash(): TableHash {\n    const hashedTable = {};\n    this.rows.forEach((row) => {\n      const hashKey = this.rowHash(row);\n      hashedTable[hashKey] = row;\n    });\n    return hashedTable;\n  }\n\n  /**\n    * Calculates the hash for the row.\n    * The hash is a concatenated values of the columns that are marked as keys\n    *\n    * @param {*} row Array or Object\n    * @returns string\n    * @memberof Table\n    */\n  rowHash(row: Object | Array<any>): Object {\n    const keyPart : string | number = this.headers ? 'column' : 'index';\n    return this.keys.map((key) => row[key[keyPart]]).sort().join();\n  }\n\n  get columns(): Columns {\n    if (this.headers) {\n      return Object.keys(this.firstRow).map((column: string, index: number) => ({ column, index }));\n    }\n    return Object.keys(this.firstRow).map((column: string) => (\n      { column, index: parseInt(column, 10) }: Column\n    ));\n  }\n\n  get columnNames(): string[] {\n    return this.columns.map(({ column }) => column);\n  }\n\n  get rows() {\n    return this.currentSheet.rows;\n  }\n\n  get firstRow(): Row {\n    const blankValue = this.headers ? { } : [];\n    return this.rows[0] || blankValue;\n  }\n\n  // Keys are pairs { index: 0, column: \"0\"}\n  setKeys(keys: Keys): Table {\n    this.keys = keys;\n    return this;\n  }\n\n  setHeaders(headers: boolean): Table {\n    this.headers = headers;\n    this.sheets.forEach((sheet) => sheet.setHeaders(headers));\n    this.setKeys(this.guessKeys());\n    return this;\n  }\n\n  setCurrentSheet(sheetName: string) {\n    this.currentSheetName = sheetName;\n    this.currentSheet = this.sheets.find((sheet) => sheet.name === sheetName);\n    this.setKeys(this.guessKeys());\n    return this;\n  }\n\n  // The usual uniqueness criterion for the tables is the email column\n  // thus we either look for the header column that looks like email\n  // or we examine each value of the first row and see if it looks like email\n  guessKeys(): Keys {\n    let key = null;\n\n    if (this.headers) {\n      key = this.columns.find(({ column }) => Table.looksLikeEmailField(column));\n    } else {\n      const emailField = this.firstRow.find((el) => Table.looksLikeEmail(el));\n      if (emailField) {\n        key = {\n          column: this.firstRow.indexOf(emailField).toString(),\n          index: this.firstRow.indexOf(emailField),\n        };\n      }\n    }\n    key = key || this.columns[0];\n\n    if (key === undefined) {\n      return [];\n    }\n\n    return [key];\n  }\n\n  static looksLikeEmailField(column: string | Array<any>) {\n    if (typeof (column) !== 'string') { return false; }\n    return /email/i.test(column);\n  }\n\n  static looksLikeEmail(column: string | any) {\n    if (typeof (column) !== 'string') { return false; }\n    return /[^@]+@[^@]+\\.[^@]+/i.test(column);\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDataGrid from 'react-data-grid';\nimport classNames from 'classnames';\n\nimport Table from 'core/table';\nimport type {\n  Key, Column, Keys, ButtonInfo,\n} from 'lib/common/types';\n\ntype Props = {\n  table: Table,\n  buttons: Array<ButtonInfo>\n}\n\ntype State = {\n  headers: boolean,\n  keys: Keys\n}\n\nclass TablePreview extends React.Component<Props, State> {\n  static keyEqualToColumn(key: Key, column: Column): boolean {\n    return key.column === column.column && key.index === column.index;\n  }\n\n  handleToggleKey: function\n  setCurrentSheet: function\n  handleHeaders: function\n\n  constructor(props: Props) {\n    super(props);\n    const { table } = props;\n\n    this.state = {\n      headers: table.headers,\n      keys: table.keys,\n    };\n\n    this.setCurrentSheet = this.setCurrentSheet.bind(this);\n    this.handleHeaders = this.handleHeaders.bind(this);\n    this.handleToggleKey = this.handleToggleKey.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  setCurrentSheet(name: string) {\n    const { table } = this.props;\n    table.setCurrentSheet(name);\n\n    this.setState({\n      keys: table.keys,\n    });\n  }\n\n  handleResize = () => {\n    this.forceUpdate();\n  }\n\n  handleHeaders(e: SyntheticInputEvent<HTMLInputElement>): void {\n    const turnedOn = e.target.checked;\n    this.setState(() => {\n      const { table } = this.props;\n\n      table.setHeaders(turnedOn);\n      return { headers: true };\n    });\n  }\n\n  handleToggleKey(e: SyntheticInputEvent<HTMLInputElement>, column: Column): void {\n    const { table } = this.props;\n    const { keys } = table;\n    let resultKeys = [];\n    const turnedOn = e.target.checked;\n    if (turnedOn) {\n      resultKeys = keys.concat(column);\n    } else {\n      resultKeys = keys.filter((key) => !TablePreview.keyEqualToColumn(key, column));\n    }\n\n    table.setKeys(resultKeys);\n    this.setState({ keys: resultKeys });\n  }\n\n  sheetTabs(): Object {\n    const { table } = this.props;\n\n    return (\n      <div className=\"sheet-tabs\">\n        {table.sheetNames.map((sheetName: string) => (\n          <button\n            className={classNames({\n              'sheet-tab': true,\n              'sheet-tab-active': table.currentSheetName === sheetName,\n            })}\n            type=\"button\"\n            key={sheetName}\n            onClick={() => this.setCurrentSheet(sheetName)}\n          >\n            <span>{sheetName}</span>\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  headerRenderer(data: Object, column: Column) {\n    const { keys } = this.state;\n\n    const headerText = data.column.rowType === 'header' ? data.column.name : '';\n    const checked = keys.some((key) => TablePreview.keyEqualToColumn(key, column));\n\n    return (\n      <label className=\"checkbox\" htmlFor={`key${headerText}`}>\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={(e) => this.handleToggleKey(e, column)}\n          id={`key${headerText}`}\n        />\n        {headerText}\n      </label>\n    );\n  }\n\n  dataGrid() {\n    const { table } = this.props;\n\n    const columns = table.columns.map((column) => ({\n      key: column.column,\n      name: column.column,\n      resizable: true,\n      headerRenderer: (args) => this.headerRenderer(args, column),\n      hash: (new Date()).getTime(),\n    }));\n\n    const { rows } = table;\n    return (\n      <div className=\"grid-container\">\n        <div className=\"absoluteWrapper\">\n          <ReactDataGrid\n            columns={columns}\n            rowGetter={(i) => rows[i]}\n            rowsCount={rows.length}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  static renderButton(buttonInfo: ButtonInfo) {\n    const { title, callback, classes, autoFocus } = buttonInfo;\n    const buttonClasses = classNames(classes || []);\n\n    return (\n      <button\n        type=\"button\"\n        onClick={callback}\n        className={buttonClasses}\n        autoFocus={autoFocus}\n      >\n        {title}\n      </button>\n    );\n  }\n\n  render() {\n    const { table, buttons } = this.props;\n    const { headers } = this.state;\n\n    return (\n      <div className=\"table-preview\">\n        <h2 className=\"title is-3\">{table.name}</h2>\n        <h3 className=\"subtitle is-5\">\n          The headers are &nbsp;\n          <span className=\"tag is-success\">{headers ? 'on' : 'off' }</span>\n        </h3>\n        <div className=\"actions\">\n          {buttons.map(TablePreview.renderButton)}\n        </div>\n        <section className=\"grid-section\">\n          {this.dataGrid()}\n          {this.sheetTabs()}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default TablePreview;\n","// @flow\nimport React from 'react';\nimport Modal from 'react-modal';\nimport Table from 'core/table';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport TablePreview from './table_preview';\nimport actions from '../actions';\n\ntype Props = {\n  addTable: (table: Table) => void,\n  addNextPossibleOperation: () => void\n}\n\ntype State = {\n  table?: null | Table\n}\n\nclass UploadButton extends React.Component<Props, State> {\n  static resetFileInput(e: SyntheticInputEvent<HTMLInputElement>) {\n    e.target.value = '';\n  }\n\n  handleFile: (e: SyntheticInputEvent<HTMLInputElement>) => void\n  handleAddTable: () => void\n  handleCancel: () => void\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      table: null,\n    };\n\n    this.handleFile = this.handleFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleAddTable = this.handleAddTable.bind(this);\n  }\n  handleCancel() {\n    this.setState({ table: null });\n  }\n\n  handleFile(e: SyntheticInputEvent<HTMLInputElement>) {\n    e.preventDefault();\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    const { name } = file;\n    reader.onloadend = () => {\n      const table = Table.fromData({ data: reader.result, name });\n      this.setState({ table });\n    };\n    reader.readAsBinaryString(file);\n  }\n\n  handleAddTable() {\n    const { table } = this.state;\n\n    this.setState({ table: null }, () => {\n      if (table) {\n        const {\n          addTable, addNextPossibleOperation,\n        } = this.props;\n\n        addTable(table);\n        addNextPossibleOperation();\n      }\n    });\n  }\n\n  renderInputButton() {\n    return <div className=\"file\">\n      <label className=\"file-label\">\n        <input className=\"file-input\" type=\"file\" name=\"resume\" onChange={this.handleFile} onClick={UploadButton.resetFileInput} />\n        <span className=\"file-cta\">\n          <span className=\"file-icon\">\n            <svg class=\"svg-inline--fa fa-upload fa-w-16\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"upload\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" data-fa-i2svg=\"\">\n              <path fill=\"currentColor\" d=\"M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\" />\n            </svg>\n          </span>\n          <span className=\"file-label\">\n            Upload a new table\n          </span>\n        </span>\n      </label>\n    </div>\n  }\n\n  render() {\n    const { table } = this.state;\n\n    return (\n      <>\n        {this.renderInputButton()}\n        {\n          table\n          && (\n          <Modal isOpen>\n            <TablePreview\n              table={table}\n              buttons={[\n                { title: 'Cancel', callback: this.handleCancel, classes: ['button', 'cancel'] },\n                { title: 'Add Table', callback: this.handleAddTable, classes: ['button', 'add-table', 'is-primary'], autoFocus: true },\n              ]}\n            />\n          </Modal>\n          )\n        }\n      </>\n    );\n  }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addTable: actions.addTable,\n    addOperation: actions.addOperation,\n    addNextPossibleOperation: actions.addNextPossibleOperation,\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(UploadButton);\n","import type { OperatorInfo } from 'core/types';\nimport type Table from 'core/table';\n\nexport const NUMBER = 'NUMBER';\nexport const STRING = 'STRING';\nexport const TABLE = 'TABLE';\nexport const FUNCTION = 'FUNCTION';\nexport const OPERATOR = 'OPERATOR';\nexport const OPERANDS = [NUMBER, STRING, TABLE];\nexport const OPEN_BRACKET = 'OPEN_BRACKET';\nexport const CLOSING_BRACKET = 'CLOSING_BRACKET';\nexport const LEFT_ASSOCIATIVITY = 'LEFT_ASSOCIATIVITY';\nexport const RIGHT_ASSOCIATIVITY = 'RIGHT_ASSOCIATIVITY';\nexport const LIST_START = '(';\n\nexport const TABLE_OPERATOR_INFO: OperatorInfo = {\n  '+': {\n    precedence: 0,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: Table, b: Table): Table => (a.plus(b)),\n    arity: 2,\n  },\n  '–': {\n    precedence: 0,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: Table, b: Table): Table => (a.minus(b)),\n    arity: 2,\n  },\n};\n\nexport const ARITHMETIC_OPERATOR_INFO: OperatorInfo = {\n  '+': {\n    precedence: 0,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: number, b: number): number => (a + b),\n    arity: 2,\n  },\n  '-': {\n    precedence: 0,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: number, b: number): number => (a - b),\n    arity: 2,\n  },\n  '*': {\n    precedence: 1,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: number, b: number): number => (a * b),\n    arity: 2,\n  },\n  '/': {\n    precedence: 1,\n    associativity: LEFT_ASSOCIATIVITY,\n    operation: (a: number, b: number): number => (a / b),\n    arity: 2,\n  },\n  '**': {\n    precedence: 2,\n    associativity: RIGHT_ASSOCIATIVITY,\n    operation: (a: number, b: number): number => (a ** b),\n    arity: 2,\n  },\n};\n","// @flow\n/* eslint-disable max-len */\nimport type { OperatorInfo, Token, Operator } from 'core/types';\nimport {\n  OPERANDS,\n  FUNCTION,\n  OPERATOR,\n  OPEN_BRACKET,\n  CLOSING_BRACKET,\n  LIST_START,\n  LEFT_ASSOCIATIVITY,\n} from 'core/constants';\n\nclass ShuntingYard {\n  operatorInfo: OperatorInfo\n\n  constructor(operatorInfo: OperatorInfo) {\n    this.operatorInfo = operatorInfo;\n  }\n\n  solve(tokenized: Array<Token>) {\n    const rpn = this.shuntingYard(tokenized);\n    return this.solveRPN(rpn);\n  }\n\n  shuntingYard(tokenized: Array<Token>):Array<Token> {\n    const outputQueue = [];\n    const operatorStack = [];\n\n    tokenized.forEach((token) => {\n      const { type } = token;\n\n      // if the token is an operand, then:\n      //   push it to the output queue.\n      if (OPERANDS.includes(type)) {\n        outputQueue.push(token);\n      }\n\n      // if the token is a function then:\n      //   push it onto the operator stack\n      if (type === FUNCTION) {\n        operatorStack.push(token);\n      }\n\n      // if the token is an operator, then:\n      //   while (\n      //     (there is a function at the top of the operator stack)\n      //     or (there is an operator at the top of the operator stack with greater precedence)\n      //     or (the operator at the top of the operator stack has equal precedence and is left associative)\n      //   )\n      //   and (the operator at the top of the operator stack is not a left parenthesis):\n      //     pop operators from the operator stack onto the output queue.\n      //   push it onto the operator stack.\n      if (type === OPERATOR) {\n        const { precedence } = this.operatorInfo[token.value.toString()];\n\n        let operatorStackTop = operatorStack[operatorStack.length - 1];\n        let operatorStackTopInfo: Operator = operatorStackTop && this.operatorInfo[operatorStackTop.value.toString()];\n\n        while (\n          operatorStackTop\n          && (\n            (\n              (\n                operatorStackTop.type === FUNCTION\n              ) || (\n                (operatorStackTop.type === OPERATOR)\n                && (\n                  (operatorStackTopInfo.precedence > precedence)\n                  || (\n                    (operatorStackTopInfo.precedence === precedence)\n                    && (operatorStackTopInfo.associativity === LEFT_ASSOCIATIVITY)\n                  )\n                )\n              )\n            ) && (\n              operatorStackTop.type !== OPEN_BRACKET\n            )\n          )) {\n          outputQueue.push(operatorStack.pop());\n          operatorStackTop = operatorStack[operatorStack.length - 1];\n          operatorStackTopInfo = operatorStackTop && this.operatorInfo[operatorStackTop.value.toString()];\n        }\n        operatorStack.push(token);\n      }\n\n      // if the token is a left paren (i.e. \"(\"), then:\n      //   push it onto the operator stack.\n      if (type === OPEN_BRACKET) {\n        // ---- Extension ----\n        // If there is a function token at the top of the stack, add a left parenthesis (LIST_START) to the output queue\n\n        const topOperator = operatorStack[operatorStack.length - 1];\n        if (topOperator && topOperator.type === FUNCTION) {\n          outputQueue.push(token);\n        } else {\n          operatorStack.push(token);\n        }\n        // -------------------\n        // original:\n        // operatorStack.push(token);\n      }\n\n      // if the token is a right paren (i.e. \")\"), then:\n      //   while the operator at the top of the operator stack is not a left paren (extension: or function):\n      //     pop the operator from the operator stack onto the output queue.\n      //   /* if the stack runs out without finding a left paren, then there are mismatched parentheses. */\n      //   if there is a left paren at the top of the operator stack, then:\n      //     pop the operator from the operator stack and discard it\n      //   Extension:\n      //   if there is a function at the top of the operator stack, then:\n      //     push function token operator stack to the ouptut queue\n      if (type === CLOSING_BRACKET) {\n        let topOperator = operatorStack[operatorStack.length - 1];\n\n        while (topOperator && topOperator.type !== OPEN_BRACKET && topOperator.type !== FUNCTION) {\n          if (operatorStack.length === 0) {\n            throw new Error('There\\'re mismatch parentheses');\n          }\n          outputQueue.push(operatorStack.pop());\n          topOperator = operatorStack[operatorStack.length - 1];\n        }\n\n        if (topOperator) {\n          if (topOperator.type === OPEN_BRACKET) {\n            operatorStack.pop();\n          }\n          if (topOperator.type === FUNCTION) {\n            outputQueue.push(operatorStack.pop());\n          }\n        }\n      }\n    });\n\n    /* After while loop, if operator stack not null, pop everything to output queue */\n    while (operatorStack.length > 0) {\n      outputQueue.push(operatorStack.pop());\n    }\n\n    return outputQueue;\n  }\n\n  solveRPN(rpn: Array<Token>) {\n    const stack = [];\n\n    rpn.forEach((token: Token) => {\n      const { type, value } = token;\n\n      if (OPERANDS.includes(type)) {\n        stack.push(value);\n      }\n\n      if (type === OPERATOR) {\n        const { arity, operation } = this.operatorInfo[value.toString()];\n        const operands = [];\n        for (let i = 0; i < arity; i += 1) {\n          operands.push(stack.pop());\n        }\n\n        const args = operands.reverse();\n\n        if (operation) {\n          const result = operation(...args);\n          stack.push(result);\n        } else {\n          throw new Error(`Please define operation on the ${type}`);\n        }\n      }\n\n      // ---- Extension ----\n      if (type === OPEN_BRACKET) {\n        stack.push(value);\n      }\n\n      if (type === FUNCTION) {\n        const functionArguments = [];\n\n        let stackTop = stack[stack.length - 1];\n        while (stackTop && stackTop !== LIST_START) {\n          functionArguments.push(stack.pop());\n          stackTop = stack[stack.length - 1];\n        }\n        if (stackTop === LIST_START) {\n          stack.pop();\n        }\n\n        if (typeof (value) === 'function') {\n          const result = value(...functionArguments);\n          stack.push(result);\n        } else {\n          throw new Error(`${value} is not a function`);\n        }\n      }\n      // -------------------\n    });\n\n    return stack[0];\n  }\n}\n\nexport default ShuntingYard;\n","// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport TableOperation from 'core/table_operation';\nimport type { TableOperations } from 'lib/common/types';\nimport actions from '../actions';\n\ntype Props = {\n  operation: TableOperation,\n  index: number,\n  changeOperation: (payload: { index: number, newOperation: TableOperation}) => void,\n  availableOperations: TableOperations\n}\n\ntype State = {\n}\n\nclass OperationButton extends React.Component<Props, State> {\n  operation: TableOperation\n  handleOperationChange: (newOperation: TableOperation) => void\n  renderOperation: any\n\n  constructor(props: Props) {\n    super(props);\n    this.operation = props.operation;\n    this.handleOperationChange = this.handleOperationChange.bind(this);\n    this.renderOperation = this.renderOperation.bind(this);\n  }\n\n  handleOperationChange(newOperation: TableOperation): void {\n    const { changeOperation, index } = this.props;\n\n    changeOperation({ index, newOperation });\n  }\n\n  renderOperation(op: TableOperation) {\n    const { operation } = this.props;\n    return (\n      <button\n        type=\"button\"\n        className={classNames({\n          'operation-button': true,\n          reset: true,\n          'operation-button-active': operation.name === op.name,\n        })}\n        onClick={() => this.handleOperationChange(op)}\n        key={op.name}\n      >\n        {op.name}\n      </button>\n    );\n  }\n\n  render() {\n    const { availableOperations } = this.props;\n\n    return (\n      <div className=\"available-operations\">\n        {availableOperations.map<React$Node>(this.renderOperation)}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    changeOperation: actions.changeOperation,\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(OperationButton);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport type Table from 'core/table';\nimport classnames from 'classnames';\nimport type { Tables } from 'lib/common/types';\nimport { getTables, getOperations } from '../selectors';\nimport actions from '../actions';\nimport TablePreview from './table_preview';\n\ntype Props = {\n  table: Table,\n  tables: Tables,\n  deleteTable: (table: Table) => void,\n  updateOperations: (index: number) => void,\n  isResultTable: boolean\n}\n\ntype State = {\n  isOpen: boolean\n}\n\nclass TableCard extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { previewIsOpen: false };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.togglePreview = this.togglePreview.bind(this);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDelete(): void {\n    const {\n      deleteTable, updateOperations, tables, table,\n    } = this.props;\n    const deletedIndex = tables.indexOf(table);\n\n    deleteTable(table);\n    updateOperations({ deletedIndex });\n  }\n\n  handleDownload(): void {\n    const { table } = this.props;\n    const result = table.toWorkBook();\n    return result;\n  }\n\n  togglePreview(): void {\n    const { previewIsOpen } = this.state;\n    this.setState({ previewIsOpen: !previewIsOpen });\n  }\n\n  render() {\n    const { table, isResultTable } = this.props;\n    const { previewIsOpen } = this.state;\n\n    return (\n      <div\n        className={classnames({\n          'table-button': true,\n          result: isResultTable,\n        })}\n        key={`${table.name}${table.currentSheetName}`}\n      >\n        <div\n          className=\"table-info ellipsis\"\n          role=\"button\"\n          tabIndex={0}\n          onClick={this.togglePreview}\n          onKeyPress={this.togglePreview}\n        >\n          <span className=\"table-filename\" title={table.name}>{table.name}</span>\n          <br />\n          <span className=\"table-sheetname\" title={table.currentSheetName}>{table.currentSheetName}</span>\n        </div>\n        <button\n          type=\"button\"\n          className={`table-delete reset ${(isResultTable && 'download') || ''}`}\n          title={isResultTable ? 'Download result' : 'Delete the table'}\n          onClick={isResultTable ? this.handleDownload : this.handleDelete}\n        >\n          {!isResultTable && '✕' }\n        </button>\n        <ul className=\"table-keys-list\">\n          {table.keys.map((key) => <li key={key.index} className=\"table-keys-list-item ellipsis\">{key.column}</li>)}\n        </ul>\n        <Modal isOpen={previewIsOpen}>\n          <TablePreview\n            table={table}\n            buttons={[\n              { title: 'Cancel', callback: this.togglePreview, classes: ['button', 'cancel'] },\n              { title: 'Download', callback: this.handleDownload, classes: ['button', 'add-table', 'is-primary'] },\n            ]}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tables: getTables(state),\n    operations: getOperations(state),\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    deleteTable: actions.deleteTable,\n    updateOperations: actions.updateOperations,\n  }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TableCard);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport type { Tables, TableOperations } from 'lib/common/types';\nimport type Table from 'core/table';\nimport { TABLE_OPERATOR_INFO, TABLE, OPERATOR } from 'core/constants';\nimport ShuntingYard from 'core/shunting_yard';\nimport TableOperation from 'core/table_operation';\nimport { getTables, getOperations } from '../selectors';\nimport OperationButton from './operation_button';\nimport TableCard from './table_card';\n\ntype Props = {\n  tables: Tables,\n  operations: TableOperations,\n}\n\ntype State = {\n\n}\n\nclass ButtonBoard extends React.Component<Props, State> {\n  static operationCard(operation: TableOperation) {\n    return (\n      <p key={operation.name}>\n        {operation.name}\n      </p>\n    );\n  }\n  shuntingYard: ShuntingYard;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { };\n\n    this.shuntingYard = new ShuntingYard(TABLE_OPERATOR_INFO);\n  }\n\n  shouldShowResult(): boolean {\n    const { operations } = this.props;\n    return TableOperation.lastOperationIsTerminal(operations);\n  }\n\n  calculateResult(): Table {\n    const { tables, operations } = this.props;\n    const operands = [];\n    tables.forEach((table, index) => {\n      operands.push({ type: TABLE, value: table });\n      operands.push({ type: OPERATOR, value: operations[index].name });\n    });\n\n    // remove the equals operation from the end\n    operands.pop();\n    return this.shuntingYard.solve(operands);\n  }\n\n  render() {\n    const { tables, operations } = this.props;\n    // Render table + operation + upload button\n    return (\n      <section className=\"buttonBoard\">\n        {\n          tables.map((table, index) => {\n            const operation = operations[index];\n            const availableOperations = TableOperation.availableOperations(\n              tables,\n              operations,\n              index,\n            );\n\n            const operationNode = operation && (\n              <OperationButton\n                operation={operation}\n                availableOperations={availableOperations}\n                index={index}\n                key={operation.name}\n              />\n            );\n\n            return [<TableCard table={table} />, operationNode];\n          })\n        }\n        {this.shouldShowResult() && <TableCard isResultTable table={this.calculateResult()} />}\n      </section>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    tables: getTables(state),\n    operations: getOperations(state),\n  };\n}\n\nexport default connect(mapStateToProps, null)(ButtonBoard);\n","\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\n\nexport function encode(arraybuffer) {\n  const bytes = new Uint8Array(arraybuffer);\n  let i; const len = bytes.length; let\n    base64 = '';\n\n  for (i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n    base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n\n  if ((len % 3) === 2) {\n    base64 = `${base64.substring(0, base64.length - 1)}=`;\n  } else if (len % 3 === 1) {\n    base64 = `${base64.substring(0, base64.length - 2)}==`;\n  }\n\n  return base64;\n}\n\nexport function decode(base64) {\n  let bufferLength = base64.length * 0.75;\n  const len = base64.length; let i; let p = 0;\n  let encoded1; let encoded2; let encoded3; let\n    encoded4;\n\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n\n  const arraybuffer = new ArrayBuffer(bufferLength);\n  const bytes = new Uint8Array(arraybuffer);\n\n  for (i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n    bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n    bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n    bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n  }\n\n  return arraybuffer;\n}\n","/*\n  Table format: [\n    [\"name@example.com\", \"Ivan\", \"Ivanov\"]\n    { email: \"name@example.com\", name: \"Ivan\", surname: \"Ivanov\" }\n  ]\n*/\nexport const xlsxTable = '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';\n\nexport const csvTable = 'IkVtYWlsIiwi0JjQvNGPIiwi0KTQsNC80LjQu9C40Y8iLCLQk9C+0YDQvtC0Iiwi0KDQvtC0INC00LXRj9GC0LXQu9GM0L3QvtGB0YLQuCIKImhlbGxvMUBleGFtcGxlLmNvbSIsIkl2YW4iLCJJdmFub3YiLCJNb3Njb3ciLCLQn9C+0LPRgNCw0LzQvNC40YHRgiIKImhlbGxvMkBleGFtcGxlLmNvbSIsIlZhc2lseSIsIlBldHJvdiIsIlN0LlBldGVyc2JvdXJnIiwi0JTQuNC30LDQudC90LXRgCIKImhlbGxvM0BleGFtcGxlLmNvbSIsIlZhc2lseSIsIlB1cGtpbiIsIlBlcm0iLCLQotC10YHRgtC40YDQvtCy0YnQuNC6IgoiaGVsbG80QGV4YW1wbGUuY29tIiwiQmFzaWwiLCJTaGV2Y292IiwiU2FyYXRvdiIsItCi0LXRgdGC0LjRgNC+0LLRidC40LoiCiJoZWxsbzVAZXhhbXBsZS5jb20iLCJMZXYiLCJUb2xzdG95IiwiTW9zY293Iiwi0KLQtdGF0L3QuNGH0LXRgdC60LjQuSDQv9C40YHQsNGC0LXQu9GMIgo=';\n\nexport const xlsxTable2 = '';\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport type { Tables, TableOperations } from 'lib/common/types';\nimport UploadButton from './upload_button';\nimport ButtonBoard from './button_board';\n\n// Fixtures\n// eslint-disable-next-line import/order\nimport Table from 'core/table';\n// eslint-disable-next-line import/order\nimport { bindActionCreators } from 'redux';\nimport actions from '../actions';\nimport * as fixtureTables from './fixtures';\nimport { decode } from './array_buffer_base64';\n// eslint-disable-next-line import/order\nimport TableOperation from 'core/table_operation';\nimport { getTables, getOperations } from '../selectors';\n\nfunction xlsxTable(name: string = 'test.xlsx') {\n  return Table.fromData({ data: decode(fixtureTables.xlsxTable2), name });\n}\n//--------------\ntype Props = {\n  addTable: (table: Table) => void,\n  addOperation: (operation: TableOperation) => void,\n  tables: Tables,\n  operations: TableOperations,\n}\n\ntype State = {}\n\nclass Container extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    // --------Fixtures------\n    const { addTable, addOperation } = props;\n    const table1: Table = xlsxTable();\n    const table2: Table = xlsxTable('test2.xlsx');\n    addTable(table1);\n    addOperation(TableOperation.plus());\n    addTable(table2.setCurrentSheet(table2.sheetNames[2]));\n    addOperation(TableOperation.equals());\n    // ----------------------\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  canUpload(): boolean {\n    const { tables, operations } = this.props;\n    // There are no tables => yes\n    if (tables.length === 0) { return true; }\n    if (TableOperation.lastOperationIsTerminal(operations)) { return false; }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <>\n        <ButtonBoard />\n        { this.canUpload() && <UploadButton /> }\n      </>\n    );\n  }\n}\n\n// Fixtures\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addTable: actions.addTable,\n    addOperation: actions.addOperation,\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tables: getTables(state),\n    operations: getOperations(state),\n  };\n}\n// -------------------\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import './styles/index.scss';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { MODULE_NAME } from './constants';\n\nexport { MODULE_NAME };\n\nexport { default as reducer } from './reducer';\nexport { selectors, actions };\nexport { default as container } from './components/container';\n","import {\n  applyMiddleware, createStore, combineReducers, compose,\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\n\n// Reducer that does nothing\nconst noopReducer = (state = {}) => state;\n\n//\n// Configures new redux store.\n//\nexport default (context, initialState = {}) => {\n  // Init redux-saga\n  const sagaMiddleware = createSagaMiddleware();\n\n  // List of default middlewares\n  const middlewares = [\n    sagaMiddleware,\n\n    // Init react-router-redux\n    routerMiddleware(context.history),\n  ];\n\n  // Log actions in dev mode\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(createLogger());\n  }\n\n  const w = window;\n  const composeEnhancers = w.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // Create store\n  const store = createStore(\n    noopReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n\n  // Hash with registered reducers\n  const reducers = { };\n\n  // Dynamically adds new reducer to the store\n  store.injectReducer = (name, reducer) => {\n    // Register reducer inside registrey\n    reducers[name] = reducer;\n\n    // NB: connected-react-router API sucks ass\n    // Compbine all registered reducers with connected-react-router reducer\n    const rootReducer = combineReducers({\n      router: connectRouter(context.history),\n      ...reducers,\n    });\n\n    // Replace reducer\n    store.replaceReducer(rootReducer);\n  };\n\n  // Dynamically runs new saga for the store\n  store.runSaga = (saga) => {\n    sagaMiddleware.run(saga);\n  };\n\n  return store;\n};\n","import { forOwn } from 'lodash';\nimport { createBrowserHistory } from 'history';\nimport createStore from '../store/createStore';\nimport { withUIContext } from './withUIContext';\n\n//\n// Global UI context for the page. Contains all global state and registered components.\n//\nexport default class UIContext {\n  // List of registered modules\n  modules = {}\n\n  // List of registered React component\n  components = {}\n\n  // Browser history wrapper\n  history = createBrowserHistory()\n\n  // Redux store\n  store = createStore(this)\n\n  //\n  // Registers new component with given name.\n  //\n  registerComponent(name, component) {\n    this.components[name] = component;\n  }\n\n  //\n  // Returns registered component by name.\n  //\n  getComponent(name) {\n    return this.components[name];\n  }\n\n  //\n  // Returns registered component by name.\n  //\n  getConnectedComponent(name) {\n    const component = this.getComponent(name);\n    return component ? withUIContext(this, component) : null;\n  }\n\n  //\n  // Returns registered module by name.\n  //\n  getModule(name) {\n    return this.modules[name];\n  }\n\n  //\n  // Registers new module.\n  //\n  registerModule(module) {\n    // Inject module reducer\n    if (module.reducer) {\n      this.store.injectReducer(module.MODULE_NAME, module.reducer);\n    }\n\n    // Run module saga\n    if (module.saga) {\n      this.store.runSaga(module.saga);\n    }\n\n    // Register components wihin module namespace\n    forOwn(module.components, (component, componentName) => {\n      this.registerComponent(`${module.MODULE_NAME}:${componentName}`, component);\n    });\n\n    // Register default component\n    if (module.container) {\n      this.registerComponent(module.MODULE_NAME, module.container);\n    }\n  }\n}\n","import { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\n\n//\n// Connects given component to context's store and router.\n//\nexport function withUIContext(context, WrappedComponent) {\n  const { store, history } = context;\n\n  return (props) => (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <WrappedComponent {...props} />\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}